High priority
- fix duplicate entries
- create man page
- Import libraries as git submodule
- Error handling for missing config file
- package with autotools?
- publish on AUR

Mid priority
- Add compilation checking on github
- Implement better error checking macros.
- Make proper use of gapplication (for sending notifications)
- Leave "SearchField" option empty to search in entire collection
- Convert external input to UTF-8 (for Windows support)
- Expand deinflection list
- Kanjify the word in the copied sentence according to the dictionary entry
- Remove trailing spaces from user settings

Low priority
- Add command line options for verbosity
- Port file reading in dictpopup_create to gio (if there exists equivalent functionality)
- Implement freeing user settings
- Refactor popup.c
- Skip certain lines on definition add (without selection), e.g.:
  - しず か （しづ—） [1]【静か・▽閑か】
  -（形動）〔文〕ナリ
- Add unit tests
- write a gui config tool
  - Select dictionaries
  - Choose dictionary sort order
  - build database
  - change general config
- Put length of longest entry into the database under LENGTH_OF_LONGEST_ENTRY. Then limit the lookup by that length
  - Only important for some auto scan implementation though

## Known problems:
- There might be "duplicate" entries especially when looking up hiragana strings, since the corresponding kanji writing is different.
  This is also unnecessary duplication in the database. Currently the only way of knowing under which kanji writing the entry is added, is the title bar.
### dictionary parser
- Escape sequences aren't handled

Possible ideas:
- Support hyper links?
  - Most "suckless" way would probably be to just open a new window with that definition (if it points to a definition)
- An "Add this entry"-button before every entry
- Save ankicard as csv if push to ankiconnect failed
- Write a browser addon which enables using dictpopup just by pressing Shift (like yomichan)

To check:
- definflector assumes that constant strings given in the code are utf8 encoded. This might be wrong if compiled on Windows for example.
