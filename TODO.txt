## dictpopup
High priority
- Handle missing config file
- publish on AUR

Mid priority
- Implement better error checking macros.
- Make proper use of gapplication (for sending notifications)
- Leave "SearchField" option empty to search in entire collection
- Expand deinflection list
- Kanjify the word in the copied sentence according to the dictionary entry
- Remove trailing spaces from user settings
- write a gui config tool
  - Select dictionaries
  - Choose dictionary sort order
  - build database
  - change general config

Low priority
- Fix Makefile to only rebuild necessary parts
- Don't call jppron through the shell
- Refactor settings.c
- Refactor popup.c
- Add correct feature test macros
- Improve portability of non-popup code
- Don't call the shell for jppron
  - merge code into this repo?
- Add command line options for verbosity (esp. showing warnings in dictpopup-create)
- Skip certain lines on definition add (without selection), e.g.:
  - しず か （しづ—） [1]【静か・▽閑か】
  -（形動）〔文〕ナリ
- Add unit tests
- Put length of longest entry into the database under LENGTH_OF_LONGEST_ENTRY. Then limit the lookup by that length
  - Only important for an auto scan implementation though

## dictpopup-create
- fix duplicate entries
- Add loading percentage
- Process every dictionary in a different thread?
  - Questionable if this makes sense, as it's already pretty fast and would make the code more complicated

## Known problems:
- There might be "duplicate" entries especially when looking up hiragana strings, since the corresponding kanji writing is different.
  This is also unnecessary duplication in the database. Currently the only way of knowing under which kanji writing the entry is added, is the title bar.
  - Probably need to add another bar above the textview to display current kanji and reading
    - This bar could also be used to quickly switch between different writings. Maybe even use tabs?

Possible ideas:
- Use zstd to compress database file
  - It reduces filesize by more than 100%, but impact on performance needs to be tested
- Write a browser addon which enables using dictpopup just by pressing Shift (like yomichan)
- Add a seperate database for importing frequency dicts
  - Will allow sorting dictionary entries by frequency
- Support hyper links?
  - Could use gtk_label_set_markup, but would need to switch to a label instead of a textview
- Make dictionary numbers (①, ②, ...) clickable for adding to Anki

To check:
- definflector assumes that constant strings given in the code are utf8 encoded. This could be wrong if compiled on Windows for example.
