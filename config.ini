[General]
# An alternative path for the database file.
# The default is $XDG_DATA_HOME/dictpopup which in turn defaults to ~/.local/share/dictpopup.
# DatabasePath = 

# Dictionaries should be sorted according to the DictSortOrder variable
Sort = true
# The order in which dictionaries should be displayed
# The dictionary names can be read off from the output of dictpopup-create (for now)
# Not listed dictionaries will be added unsorted to the end
DictSortOrder = 大辞林　第四版;旺文社国語辞典 第十一版 画像無し;使い方の分かる 類語例解辞典;明鏡国語辞典　第二版;三省堂国語辞典　第八版;

# Remove all white space from the lookup string
NukeWhitespaceLookup = true

# If there was no exact match, it will try 
# to use mecab to lookup a hiragana conversion of the lookup string
MecabConversion = true
# The lookup string will be shortened by a character until there is a match
SubstringSearch = true

[Anki]
# Enable support for creating Anki cards
Enabled = true
Deck = Japanese
NoteType = Japanese sentences
FieldNames = SentKanji;VocabKanji;VocabFurigana;VocabDef;Notes;

# Prompts you to select a sentence, which can be mapped to some Anki field
CopySentence = true
# Remove all white space from the copied sentence 
NukeWhitespaceSentence = true
# Available entries for the field mapping:
#
# 0	Empty			 An empty string.
# 1	LookedUpString		 The selected word or the argument dictpopup was called with
# 2	CopiedSentence		 The copied sentence
# 3	BoldSentence		 The copied sentence with the looked up string in bold
# 4	DictionaryKanji		 The kanji writing of the corresponding dictionary entry
# 5	DictionaryReading	 The hiragana reading from the dictionary entry
# 6	DictionaryDefinition	 The text of the chosen dictionary definition
# 7	Furigana		 Currently the string: DictionaryKanji[DictionaryReading]
# 8	FocusedWindowName	 The name of the focused window at lookup time
#
FieldMapping = 3;4;7;6;8;

# Check if the looked up string is already contained in the Anki deck provided above
# The result will be displayed as a colored dot
CheckIfExists = true
# The Anki field in which the existence check searches the word in
SearchField = VocabKanji

[Popup]
# Window proportions
Width = 600
Height = 380
# The margin of the text to the border
Margin = 5

[Pronunciation]
# Path to the directory where the ajt japanese audio index folders are stored in
# AudioIndicesDirectory = 
# Display the pronunciation button
DisplayButton = true
# Automatically play a pronunciation of the first word on startup
PronounceOnStart = true
# The folder where the ajt audio directories are stored
# Expected folder structure:
# ├── ajt_japanese_audio
# │   ├── daijisen_pronunciations_index
# │   │   ├── index.json
# │   │   ├── media
# │   ├── nhk_1998_pronunciations_index
# │   │   ├── index.json
# │   │   ├── media
# │   │   └── release_info.conf
# │   ├── nhk_2016_pronunciations_index
# │   │   ├── index.json
# FolderPath = /home/user/.local/share/ajt_japanese_audio
